# NORTHWINDAPP UYGULAMA AKIŞI

## 📋 **PROJE GENEL BAKIŞ**

NorthwindApp, Northwind veritabanı üzerinde çalışan modern bir web uygulamasıdır. 
Backend .NET Core Web API, Frontend React.js teknolojileri kullanılarak geliştirilmiştir.

---

## 🏗️ **MİMARİ YAPISI**

### **Backend Katmanları:**
- **NorthwindApp.API** - Web API Controller'ları
- **NorthwindApp.Business** - İş mantığı ve servisler
- **NorthwindApp.Data** - Veri erişim katmanı (Repository Pattern)
- **NorthwindApp.Core** - DTO'lar ve ortak sınıflar
- **Northwind.Entities** - Entity modelleri

### **Frontend:**
- **NorthwindAppFrontend** - React.js uygulaması

---

## 🔄 **UYGULAMA AKIŞI**

### **1. VERİ YÖNETİMİ AKIŞI**

#### **Listeleme İşlemi:**
```
Frontend → API Controller → Business Service → Repository → Database
         ←                ←                ←           ←
```

#### **Ekleme İşlemi:**
```
Frontend Form → API Controller → Business Service → Repository → Database
              ← Validation    ← Response       ← Success/Error
```

#### **Güncelleme İşlemi:**
```
Frontend Form → API Controller → Business Service → Repository → Database
              ← Validation    ← Response       ← Success/Error
```

#### **Silme İşlemi (Soft Delete):**
```
Frontend → API Controller → Business Service → Repository → Database (IsDeleted = true)
         ←                ←                ←           ←
```

---

## 📊 **ENTİTİLER VE ÖZELLİKLERİ**

### **1. PRODUCT (Ürün)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Ürün adı, kategori, tedarikçi, fiyat aralığı
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

### **2. CATEGORY (Kategori)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Kategori adı, açıklama
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

### **3. SUPPLIER (Tedarikçi)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Şirket adı, iletişim kişisi, şehir, ülke
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

### **4. CUSTOMER (Müşteri)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Müşteri ID, şirket adı, iletişim kişisi, şehir, ülke
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

### **5. EMPLOYEE (Çalışan)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Ad, soyad, unvan, ülke
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

### **6. ORDER (Sipariş)**
- **CRUD İşlemleri:** ✅ Tam
- **Filtreleme:** ✅ Sipariş ID, müşteri, çalışan, tarih aralığı
- **Sıralama:** ✅ Tüm alanlar
- **Sayfalama:** ✅ Dinamik
- **Soft Delete:** ✅ IsDeleted ile
- **Cache:** ✅ In-Memory Cache
- **Validation:** ✅ Formik + Yup (Frontend) + FluentValidation (Backend)

---

## 🛠️ **TEKNİK ÖZELLİKLER**

### **Backend Teknolojileri:**
- **.NET 9.0** - Framework
- **Entity Framework Core** - ORM
- **FluentValidation** - Validation
- **AutoMapper** - Object Mapping
- **In-Memory Cache** - Caching
- **Repository Pattern** - Data Access
- **Layered Architecture** - Clean Architecture

### **Frontend Teknolojileri:**
- **React.js** - UI Framework
- **React Bootstrap** - UI Components
- **Formik + Yup** - Form Management & Validation
- **Axios** - HTTP Client
- **React Toastify** - Notifications
- **React Icons** - Icons

### **Veritabanı:**
- **SQL Server** - Database
- **Northwind Database** - Sample Data

---

## 🔧 **KULLANICI ARAYÜZÜ AKIŞI**

### **1. Ana Sayfa (Dashboard)**
- Tüm entity'lerin özet bilgileri
- Hızlı erişim linkleri
- İstatistikler

### **2. Entity Sayfaları**
Her entity için aynı akış:
1. **Liste Görünümü**
   - Filtreleme seçenekleri
   - Sıralama butonları
   - Sayfalama kontrolleri
   - CRUD işlem butonları

2. **Ekleme Modal'ı**
   - Formik form
   - Yup validation
   - Başarı/hata bildirimleri

3. **Düzenleme Modal'ı**
   - Mevcut veri ile dolu form
   - Güncelleme işlemi
   - Başarı/hata bildirimleri

4. **Silme Onay Modal'ı**
   - Onay dialog'u
   - Soft delete işlemi
   - Başarı/hata bildirimleri

---

## 🔄 **VERİ AKIŞI DETAYLARI**

### **API Response Yapısı:**
```json
{
  "success": true,
  "data": {
    "items": [...],
    "totalCount": 100,
    "page": 1,
    "pageSize": 10,
    "totalPages": 10
  },
  "message": "İşlem başarılı"
}
```

### **Cache Stratejisi:**
- **Cache Key:** `EntityName_FilterParams_SortParams_Page_PageSize`
- **Cache Duration:** 5 dakika
- **Cache Invalidation:** CRUD işlemlerinde otomatik

### **Validation Stratejisi:**
- **Frontend:** Formik + Yup (Real-time validation)
- **Backend:** FluentValidation (Server-side validation)
- **API Response:** Validation error'ları JSON formatında

---

## 🚀 **DEPLOYMENT VE ÇALIŞTIRMA**

### **Backend:**
```bash
cd NorthwindApp.API
dotnet run
```

### **Frontend:**
```bash
cd NorthwindAppFrontend
npm start
```

### **Veritabanı:**
- SQL Server bağlantısı gerekli
- Northwind database'i yüklü olmalı
- Connection string: `appsettings.json` içinde

---

## 📈 **PERFORMANS ÖZELLİKLERİ**

### **Optimizasyonlar:**
- ✅ **Caching:** In-Memory cache ile hızlı erişim
- ✅ **Pagination:** Büyük veri setleri için sayfalama
- ✅ **Filtering:** Dinamik filtreleme
- ✅ **Sorting:** Çoklu alan sıralama
- ✅ **Soft Delete:** Veri kaybı olmadan silme
- ✅ **Validation:** Çift katmanlı validation

### **Güvenlik:**
- ✅ **Input Validation:** Tüm kullanıcı girdileri validate edilir
- ✅ **SQL Injection Protection:** Entity Framework ile korunma
- ✅ **CORS Configuration:** Cross-origin istekler için yapılandırma

---

## 🎯 **SONUÇ**

NorthwindApp, modern web geliştirme standartlarına uygun, 
ölçeklenebilir ve kullanıcı dostu bir uygulamadır. 
Tüm CRUD işlemleri, filtreleme, sıralama, sayfalama ve 
cache özellikleri ile tam fonksiyonel bir yönetim paneli sunar.

**Geliştirici:** Marek Hamsik  
**Tarih:** 2024  
**Teknolojiler:** .NET 9.0, React.js, SQL Server 